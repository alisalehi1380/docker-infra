services:

  app.dev:
    container_name: app.dev
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
    ports:
      - ${APP_PORT:-80}:8080
    volumes:
      - ./:/var/www/html
    depends_on:
      - redis
      - mysql

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s
    volumes:
      - mysql:/var/lib/mysql
      - ./docker/logs/mysql:/var/log/mysql

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

volumes:
  mysql:
  redis:
